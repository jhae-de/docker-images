name: Publish Docker image
run-name: Publish Docker image

on:
  workflow_call:
    inputs:
      context:
        type: string
        required: false
        default: ./
      dockerfile:
        type: string
        required: false
        default: ./Dockerfile
      build-args:
        type: string
        required: false
      image-name:
        type: string
        required: true
      image-title:
        type: string
        required: false
      image-description:
        type: string
        required: false
      image-version:
        type: string
        required: true
      image-tags:
        type: string
        required: true
      is-latest:
        type: boolean
        required: false
        default: false
      is-skipped:
        type: boolean
        required: false
        default: false

env:
  REGISTRY: ghcr.io
  USERNAME: ${{ github.repository_owner }}

jobs:
  publish:
    name: Publish Docker image
    if: inputs.is-skipped == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ inputs.image-name }}
          labels: |
            org.opencontainers.image.title=${{ inputs.image-title }}
            org.opencontainers.image.description=${{ inputs.image-description }}
            org.opencontainers.image.version=${{ inputs.image-version }}
          tags: |
            ${{ inputs.image-tags }}
            ${{ inputs.is-latest && 'type=raw,value=latest' || '' }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          build-args: ${{ inputs.build-args }}
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
          push: true
